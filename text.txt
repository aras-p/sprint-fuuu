shot1

snprintf -> _vsnprintf -> __v2printf -> __vfprintf -> localeconv_l
https://github.com/apple-oss-distributions/Libc/blob/d0bbfb749/locale/FreeBSD/localeconv.c
	XL_LOCK(loc);
		#define XL_LOCK(x)	os_unfair_lock_lock(&(x)->__lock);

Was changed from a double-check "has changed?" with a lock inside into just a lock,
on 2022 Feb 7 (Libc-1506.40.4)
	https://github.com/apple-oss-distributions/Libc/commit/d0bbfb749a6116512756d9c65922d725e9863495#diff-083c7c975ba1dc50e8c14c44653f54f61b1a8cda32bd596d0fb570211e54fdccR121

FreeBSD does not have a mutex lock in there btw, but on 2021 Sep 17 it did add some atomic acq/releases
 https://github.com/freebsd/freebsd-src/commit/7eb138a9e5363

OpenBSD does not try to do any thread safety at all in localeconv:
 https://github.com/openbsd/src/blob/master/lib/libc/locale/localeconv.c


glibc for reference: https://github.com/bminor/glibc/blob/master/locale/localeconv.c

------------------
Windows:
* stringstream:
	1 thread 477ms
		try_get_function 112
		std::num_put<>::_Iput 61
		output_processor<>::process 45
		common_vsnprintf 20
		do_stringstream 44
	8 thread 15006ms
		RtlpEnterCriticalSectionContended 7279
		KiExitDispatcher 2758
		[total] std::use_facet 12732
			spends all the time in some mutex
* format_to:
	1 thread 1136ms
		_Fmt_codec constructor 1053
			__std_get_cvt 1053
				GetCPInfoExW 1015
					GetStringTableEntry 998
						FindResourceExW 577
							LdrpLoadResourceFromAlternativeModule 510
						LoadResource 321
							LdrpAccessResourceDataNoMultipleLanguage 306
	8 thread 4906ms
		_Fmt_codec constructor 4811
			__std_get_cvt 4811
				GetCPInfoExW 4753
					GetStringTableEntry 4661
						FindResourceExW 2339
							...MiLockVadShared 708
							...MiUnlockAndDereferenceVadShared  275
							...LOCK_ADDRESS_SPACE_SHARED 256
							...UNLOCK_ADDRESS_SPACE_SHARED 99
